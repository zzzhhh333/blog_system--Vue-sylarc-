{"version":3,"file":"watermark2.js","sources":["../../../../../../packages/components/watermark/src/watermark.vue"],"sourcesContent":["<template>\n  <div ref=\"containerRef\" :style=\"[style]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { isArray, isUndefined } from '@element-plus/utils'\nimport { watermarkProps } from './watermark'\nimport { getPixelRatio, getStyleStr, reRendering } from './utils'\nimport useClips from './useClips'\n\nimport type { WatermarkProps } from './watermark'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElWatermark',\n})\n\nconst style: CSSProperties = {\n  position: 'relative',\n}\n\nconst props = defineProps(watermarkProps)\nconst fontGap = computed(() => props.font?.fontGap ?? 3)\nconst color = computed(() => props.font?.color ?? 'rgba(0,0,0,.15)')\nconst fontSize = computed(() => props.font?.fontSize ?? 16)\nconst fontWeight = computed(() => props.font?.fontWeight ?? 'normal')\nconst fontStyle = computed(() => props.font?.fontStyle ?? 'normal')\nconst fontFamily = computed(() => props.font?.fontFamily ?? 'sans-serif')\nconst textAlign = computed(() => props.font?.textAlign ?? 'center')\nconst textBaseline = computed(() => props.font?.textBaseline ?? 'hanging')\n\nconst gapX = computed(() => props.gap[0])\nconst gapY = computed(() => props.gap[1])\nconst gapXCenter = computed(() => gapX.value / 2)\nconst gapYCenter = computed(() => gapY.value / 2)\nconst offsetLeft = computed(() => props.offset?.[0] ?? gapXCenter.value)\nconst offsetTop = computed(() => props.offset?.[1] ?? gapYCenter.value)\n\nconst getMarkStyle = () => {\n  const markStyle: CSSProperties = {\n    zIndex: props.zIndex,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none',\n    backgroundRepeat: 'repeat',\n  }\n\n  /** Calculate the style of the offset */\n  let positionLeft = offsetLeft.value - gapXCenter.value\n  let positionTop = offsetTop.value - gapYCenter.value\n  if (positionLeft > 0) {\n    markStyle.left = `${positionLeft}px`\n    markStyle.width = `calc(100% - ${positionLeft}px)`\n    positionLeft = 0\n  }\n  if (positionTop > 0) {\n    markStyle.top = `${positionTop}px`\n    markStyle.height = `calc(100% - ${positionTop}px)`\n    positionTop = 0\n  }\n  markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`\n\n  return markStyle\n}\n\nconst containerRef = shallowRef<HTMLDivElement | null>(null)\nconst watermarkRef = shallowRef<HTMLDivElement>()\nconst stopObservation = ref(false)\n\nconst destroyWatermark = () => {\n  if (watermarkRef.value) {\n    watermarkRef.value.remove()\n    watermarkRef.value = undefined\n  }\n}\nconst appendWatermark = (base64Url: string, markWidth: number) => {\n  if (containerRef.value && watermarkRef.value) {\n    stopObservation.value = true\n    watermarkRef.value.setAttribute(\n      'style',\n      getStyleStr({\n        ...getMarkStyle(),\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${Math.floor(markWidth)}px`,\n      })\n    )\n    containerRef.value?.append(watermarkRef.value)\n    // Delayed execution\n    setTimeout(() => {\n      stopObservation.value = false\n    })\n  }\n}\n\n/**\n * Get the width and height of the watermark. The default values are as follows\n * Image: [120, 64]; Content: It's calculated by content;\n */\nconst getMarkSize = (ctx: CanvasRenderingContext2D) => {\n  let defaultWidth = 120\n  let defaultHeight = 64\n  let space = 0\n\n  const { image, content, width, height, rotate } = props\n\n  if (!image && ctx.measureText) {\n    ctx.font = `${Number(fontSize.value)}px ${fontFamily.value}`\n\n    const contents = isArray(content) ? content : [content]\n    let maxWidth = 0\n    let maxHeight = 0\n\n    contents.forEach((item) => {\n      const {\n        width,\n        fontBoundingBoxAscent,\n        fontBoundingBoxDescent,\n        actualBoundingBoxAscent,\n        actualBoundingBoxDescent,\n      } = ctx.measureText(item!)\n      // Using `actualBoundingBoxAscent` to be compatible with lower version browsers (eg: Firefox < 116)\n      const height = isUndefined(fontBoundingBoxAscent)\n        ? actualBoundingBoxAscent + actualBoundingBoxDescent\n        : fontBoundingBoxAscent + fontBoundingBoxDescent\n\n      if (width > maxWidth) maxWidth = Math.ceil(width)\n      if (height > maxHeight) maxHeight = Math.ceil(height)\n    })\n\n    defaultWidth = maxWidth\n    defaultHeight =\n      maxHeight * contents.length + (contents.length - 1) * fontGap.value\n\n    const angle = (Math.PI / 180) * Number(rotate)\n    space = Math.ceil(Math.abs(Math.sin(angle) * defaultHeight) / 2)\n\n    defaultWidth += space\n  }\n\n  return [width ?? defaultWidth, height ?? defaultHeight, space] as const\n}\n\nconst getClips = useClips()\n\nconst renderWatermark = () => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  const image = props.image\n  const content = props.content\n  const rotate = props.rotate\n\n  if (ctx) {\n    if (!watermarkRef.value) {\n      watermarkRef.value = document.createElement('div')\n    }\n\n    const ratio = getPixelRatio()\n    const [markWidth, markHeight, space] = getMarkSize(ctx)\n\n    const drawCanvas = (\n      drawContent?: NonNullable<WatermarkProps['content']> | HTMLImageElement\n    ) => {\n      const [textClips, clipWidth] = getClips(\n        drawContent || '',\n        rotate,\n        ratio,\n        markWidth,\n        markHeight,\n        {\n          color: color.value,\n          fontSize: fontSize.value,\n          fontStyle: fontStyle.value,\n          fontWeight: fontWeight.value,\n          fontFamily: fontFamily.value,\n          fontGap: fontGap.value,\n          textAlign: textAlign.value,\n          textBaseline: textBaseline.value,\n        },\n        gapX.value,\n        gapY.value,\n        space\n      )\n\n      appendWatermark(textClips, clipWidth)\n    }\n\n    if (image) {\n      const img = new Image()\n      img.onload = () => {\n        drawCanvas(img)\n      }\n      img.onerror = () => {\n        drawCanvas(content)\n      }\n      img.crossOrigin = 'anonymous'\n      img.referrerPolicy = 'no-referrer'\n      img.src = image\n    } else {\n      drawCanvas(content)\n    }\n  }\n}\n\nonMounted(() => {\n  renderWatermark()\n})\n\nwatch(\n  () => props,\n  () => {\n    renderWatermark()\n  },\n  {\n    deep: true,\n    flush: 'post',\n  }\n)\n\nonBeforeUnmount(() => {\n  destroyWatermark()\n})\n\nconst onMutate = (mutations: MutationRecord[]) => {\n  if (stopObservation.value) {\n    return\n  }\n  mutations.forEach((mutation) => {\n    if (reRendering(mutation, watermarkRef.value)) {\n      destroyWatermark()\n      renderWatermark()\n    }\n  })\n}\n\nuseMutationObserver(containerRef, onMutate, {\n  attributes: true,\n  subtree: true,\n  childList: true,\n})\n</script>\n"],"names":["computed","shallowRef","ref","getStyleStr","isArray","isUndefined","useClips","onMounted","watch","onBeforeUnmount"],"mappings":"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"}