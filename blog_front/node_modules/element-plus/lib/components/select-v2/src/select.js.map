{"version":3,"file":"select.js","sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass!]\"\n      :popper-style=\"popperStyle\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.cachedOptions\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :index=\"getIndex(item)\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :index=\"getIndex(selected)\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                :tabindex=\"tabindex\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :aria-controls=\"contentId\"\n                :aria-activedescendant=\"\n                  states.hoveringIndex >= 0\n                    ? `${contentId}-${states.hoveringIndex}`\n                    : ''\n                \"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :index=\"allOptionsValueMap.get(modelValue)?.index ?? -1\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsInput.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          :id=\"contentId\"\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize - BORDER_HORIZONTAL_WIDTH\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n          :aria-label=\"ariaLabel\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\" @click.stop>\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\" @click.stop>\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useCalcInputWidth, useId } from '@element-plus/hooks'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2Emits, selectV2Props } from './defaults'\nimport { selectV2InjectionKey } from './token'\nimport { BORDER_HORIZONTAL_WIDTH } from '@element-plus/constants'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n    const contentId = useId()\n\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      contentId,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    })\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.cachedOptions.map((i) => i.label as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      contentId,\n      BORDER_HORIZONTAL_WIDTH,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElTag","ElTooltip","ElIcon","ClickOutside","selectV2Props","selectV2Emits","computed","isArray","useSelect","reactive","toRefs","useCalcInputWidth","useId","provide","selectV2InjectionKey","BORDER_HORIZONTAL_WIDTH","_resolveComponent","_createVNode","_withCtx","_createElementVNode","_normalizeClass","_withModifiers","_openBlock","_createElementBlock","_renderSlot","_createCommentVNode","_Fragment","_renderList","_normalizeStyle","_createBlock","_createTextVNode","_toDisplayString","_withKeys","_vModelText","_vShow","_resolveDynamicComponent","_createSlots","_normalizeProps","_guardReactiveProps"],"mappings":"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"}