{"version":3,"file":"select2.js","sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @[mouseEnterEventName]=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :placement=\"placement\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :popper-style=\"popperStyle\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!states.selected.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.selected\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(item)\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :index=\"item.index\"\n                      :label=\"item.currentLabel\"\n                      :value=\"item.value\"\n                    >\n                      {{ item.currentLabel }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && states.selected.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      disable-transitions\n                      :style=\"collapseTagStyle\"\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ states.selected.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"item in collapseTagList\"\n                      :key=\"getValueKey(item)\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !item.isDisabled\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, item)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :index=\"item.index\"\n                            :label=\"item.currentLabel\"\n                            :value=\"item.value\"\n                          >\n                            {{ item.currentLabel }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                type=\"text\"\n                :name=\"name\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                :autocomplete=\"autocomplete\"\n                :style=\"inputStyle\"\n                :tabindex=\"tabindex\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                :aria-activedescendant=\"hoverOption?.id || ''\"\n                :aria-controls=\"contentId\"\n                :aria-expanded=\"dropdownMenuVisible\"\n                :aria-label=\"ariaLabel\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                @keydown.down.stop.prevent=\"navigateOptions('next')\"\n                @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.enter.stop.prevent=\"selectOption\"\n                @keydown.delete.stop=\"deletePrevTag\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @input=\"onInput\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :index=\"getOption(modelValue!).index\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent && !showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsSelect.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click=\"handleClearClick\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu ref=\"menuRef\">\n          <div\n            v-if=\"$slots.header\"\n            :class=\"nsSelect.be('dropdown', 'header')\"\n            @click.stop\n          >\n            <slot name=\"header\" />\n          </div>\n          <el-scrollbar\n            v-show=\"states.options.size > 0 && !loading\"\n            :id=\"contentId\"\n            ref=\"scrollbarRef\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[nsSelect.is('empty', filteredOptionsCount === 0)]\"\n            role=\"listbox\"\n            :aria-label=\"ariaLabel\"\n            aria-orientation=\"vertical\"\n            @scroll=\"popupScroll\"\n          >\n            <el-option\n              v-if=\"showNewOption\"\n              :value=\"states.inputValue\"\n              :created=\"true\"\n            />\n            <el-options>\n              <slot>\n                <template v-for=\"(option, index) in options\" :key=\"index\">\n                  <el-option-group\n                    v-if=\"getOptions(option)?.length\"\n                    :label=\"getLabel(option)\"\n                    :disabled=\"getDisabled(option)\"\n                  >\n                    <el-option\n                      v-for=\"item in getOptions(option)\"\n                      :key=\"getValue(item)\"\n                      v-bind=\"getOptionProps(item)\"\n                    />\n                  </el-option-group>\n                  <el-option v-else v-bind=\"getOptionProps(option)\" />\n                </template>\n              </slot>\n            </el-options>\n          </el-scrollbar>\n          <div\n            v-if=\"$slots.loading && loading\"\n            :class=\"nsSelect.be('dropdown', 'loading')\"\n          >\n            <slot name=\"loading\" />\n          </div>\n          <div\n            v-else-if=\"loading || filteredOptionsCount === 0\"\n            :class=\"nsSelect.be('dropdown', 'empty')\"\n          >\n            <slot name=\"empty\">\n              <span>{{ emptyText }}</span>\n            </slot>\n          </div>\n          <div\n            v-if=\"$slots.footer\"\n            :class=\"nsSelect.be('dropdown', 'footer')\"\n            @click.stop\n          >\n            <slot name=\"footer\" />\n          </div>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  provide,\n  reactive,\n  toRefs,\n  watch,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { flattedChildren, isArray, isObject } from '@element-plus/utils'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport { useProps } from '@element-plus/components/select-v2/src/useProps'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect } from './useSelect'\nimport { selectKey } from './token'\nimport ElOptions from './options'\nimport { selectProps } from './select'\nimport ElOptionGroup from './option-group.vue'\n\nimport type { VNode } from 'vue'\nimport type { SelectContext } from './type'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElSelectMenu,\n    ElOption,\n    ElOptions,\n    ElOptionGroup,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n    'popup-scroll',\n  ],\n\n  setup(props, { emit, slots }) {\n    const instance = getCurrentInstance()!\n    instance.appContext.config.warnHandler = (...args) => {\n      // Overrides warnings about slots not being executable outside of a render function.\n      // We call slot below just to simulate data when persist is false, this warning message should be ignored\n      if (\n        !args[0] ||\n        args[0].includes(\n          'Slot \"default\" invoked outside of the render function'\n        )\n      ) {\n        return\n      }\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n    }\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n\n      return multiple ? fallback : rawModelValue\n    })\n\n    const _props = reactive({\n      ...toRefs(props),\n      modelValue,\n    })\n\n    const API = useSelect(_props, emit)\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n    const { getLabel, getValue, getOptions, getDisabled } = useProps(props)\n\n    const getOptionProps = (option: Record<string, any>) => ({\n      label: getLabel(option),\n      value: getValue(option),\n      disabled: getDisabled(option),\n    })\n\n    const flatTreeSelectData = (data: any[]) => {\n      return data.reduce((acc, item) => {\n        acc.push(item)\n        if (item.children && item.children.length > 0) {\n          acc.push(...flatTreeSelectData(item.children))\n        }\n        return acc\n      }, [])\n    }\n\n    const manuallyRenderSlots = (vnodes: VNode[] | undefined) => {\n      // After option rendering is completed, the useSelect internal state can collect the value of each option.\n      // If the persistent value is false, option will not be rendered by default, so in this case,\n      // manually render and load option data here.\n      const children = flattedChildren(vnodes || []) as VNode[]\n      children.forEach((item) => {\n        if (\n          isObject(item) &&\n          // @ts-expect-error\n          (item.type.name === 'ElOption' || item.type.name === 'ElTree')\n        ) {\n          // @ts-expect-error\n          const _name = item.type.name\n          if (_name === 'ElTree') {\n            // tree-select component is a special case.\n            // So we need to handle it separately.\n            const treeData = item.props?.data || []\n            const flatData = flatTreeSelectData(treeData)\n            flatData.forEach((treeItem: any) => {\n              treeItem.currentLabel =\n                treeItem.label ||\n                (isObject(treeItem.value) ? '' : treeItem.value)\n              API.onOptionCreate(treeItem)\n            })\n          } else if (_name === 'ElOption') {\n            const obj = { ...item.props } as any\n            obj.currentLabel =\n              obj.label || (isObject(obj.value) ? '' : obj.value)\n            API.onOptionCreate(obj)\n          }\n        }\n      })\n    }\n    watch(\n      () => [slots.default?.(), modelValue.value],\n      () => {\n        if (props.persistent) {\n          // If persistent is true, we don't need to manually render slots.\n          return\n        }\n        manuallyRenderSlots(slots.default?.())\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    provide(\n      selectKey,\n      reactive({\n        props: _props,\n        states: API.states,\n        selectRef: API.selectRef,\n        optionsArray: API.optionsArray,\n        setSelected: API.setSelected,\n        handleOptionSelect: API.handleOptionSelect,\n        onOptionCreate: API.onOptionCreate,\n        onOptionDestroy: API.onOptionDestroy,\n      }) satisfies SelectContext\n    )\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.selected.map((i) => i.currentLabel as string)\n    })\n\n    onBeforeUnmount(() => {\n      // https://github.com/element-plus/element-plus/issues/21279\n      instance.appContext.config.warnHandler = undefined\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      getLabel,\n      getValue,\n      getOptions,\n      getDisabled,\n      getOptionProps,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElOption","ElOptions","ElOptionGroup","ElTag","ElScrollbar","ElTooltip","ElIcon","ClickOutside","selectProps","UPDATE_MODEL_EVENT","CHANGE_EVENT","getCurrentInstance","computed","isArray","toRefs","useSelect","useCalcInputWidth","useProps","flattedChildren","isObject","watch","provide","selectKey","reactive","onBeforeUnmount","_resolveComponent","_createVNode","_withCtx","_createElementVNode","_withModifiers","_openBlock","_createElementBlock","_normalizeClass","_renderSlot","_createCommentVNode","_Fragment","_renderList","_normalizeStyle","_createTextVNode","_toDisplayString","_createBlock","_withKeys","_vModelText","_resolveDynamicComponent","_withDirectives","_mergeProps","_normalizeProps","_vShow","_export_sfc"],"mappings":"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"}