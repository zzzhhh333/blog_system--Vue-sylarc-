{"version":3,"file":"autocomplete2.js","sources":["../../../../../../packages/components/autocomplete/src/autocomplete.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popperRef\"\n    :visible=\"suggestionVisible\"\n    :placement=\"placement\"\n    :fallback-placements=\"['bottom-start', 'top-start']\"\n    :popper-class=\"[ns.e('popper'), popperClass!]\"\n    :popper-style=\"popperStyle\"\n    :teleported=\"teleported\"\n    :append-to=\"appendTo\"\n    :gpu-acceleration=\"false\"\n    pure\n    manual-mode\n    effect=\"light\"\n    trigger=\"click\"\n    :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n    persistent\n    role=\"listbox\"\n    @before-show=\"onSuggestionShow\"\n    @hide=\"onHide\"\n  >\n    <div\n      ref=\"listboxRef\"\n      :class=\"[ns.b(), $attrs.class]\"\n      :style=\"styles\"\n      role=\"combobox\"\n      aria-haspopup=\"listbox\"\n      :aria-expanded=\"suggestionVisible\"\n      :aria-owns=\"listboxId\"\n    >\n      <el-input\n        ref=\"inputRef\"\n        v-bind=\"mergeProps(passInputProps, $attrs)\"\n        :model-value=\"modelValue\"\n        :disabled=\"disabled\"\n        @input=\"handleInput\"\n        @change=\"handleChange\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @clear=\"handleClear\"\n        @keydown.up.prevent=\"highlight(highlightedIndex - 1)\"\n        @keydown.down.prevent=\"highlight(highlightedIndex + 1)\"\n        @keydown.enter.prevent=\"handleKeyEnter\"\n        @keydown.tab=\"close\"\n        @keydown.esc=\"handleKeyEscape\"\n        @mousedown=\"handleMouseDown\"\n      >\n        <template v-if=\"$slots.prepend\" #prepend>\n          <slot name=\"prepend\" />\n        </template>\n        <template v-if=\"$slots.append\" #append>\n          <slot name=\"append\" />\n        </template>\n        <template v-if=\"$slots.prefix\" #prefix>\n          <slot name=\"prefix\" />\n        </template>\n        <template v-if=\"$slots.suffix\" #suffix>\n          <slot name=\"suffix\" />\n        </template>\n      </el-input>\n    </div>\n    <template #content>\n      <div\n        ref=\"regionRef\"\n        :class=\"[ns.b('suggestion'), ns.is('loading', suggestionLoading)]\"\n        :style=\"{\n          [fitInputWidth ? 'width' : 'minWidth']: dropdownWidth,\n          outline: 'none',\n        }\"\n        role=\"region\"\n      >\n        <div\n          v-if=\"$slots.header\"\n          :class=\"ns.be('suggestion', 'header')\"\n          @click.stop\n        >\n          <slot name=\"header\" />\n        </div>\n        <el-scrollbar\n          :id=\"listboxId\"\n          tag=\"ul\"\n          :wrap-class=\"ns.be('suggestion', 'wrap')\"\n          :view-class=\"ns.be('suggestion', 'list')\"\n          role=\"listbox\"\n        >\n          <li v-if=\"suggestionLoading\">\n            <slot name=\"loading\">\n              <el-icon :class=\"ns.is('loading')\">\n                <Loading />\n              </el-icon>\n            </slot>\n          </li>\n          <template v-else>\n            <li\n              v-for=\"(item, index) in suggestions\"\n              :id=\"`${listboxId}-item-${index}`\"\n              :key=\"index\"\n              :class=\"{ highlighted: highlightedIndex === index }\"\n              role=\"option\"\n              :aria-selected=\"highlightedIndex === index\"\n              @click=\"handleSelect(item)\"\n            >\n              <slot :item=\"item\">{{ item[valueKey] }}</slot>\n            </li>\n          </template>\n        </el-scrollbar>\n        <div\n          v-if=\"$slots.footer\"\n          :class=\"ns.be('suggestion', 'footer')\"\n          @click.stop\n        >\n          <slot name=\"footer\" />\n        </div>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  mergeProps,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  useAttrs as useRawAttrs,\n} from 'vue'\nimport { debounce, pick } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { Loading } from '@element-plus/icons-vue'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { isArray, throwError } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport ElInput, { inputProps } from '@element-plus/components/input'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElIcon from '@element-plus/components/icon'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { autocompleteEmits, autocompleteProps } from './autocomplete'\n\nimport type { AutocompleteData } from './autocomplete'\nimport type { StyleValue } from 'vue'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { InputInstance } from '@element-plus/components/input'\n\nconst COMPONENT_NAME = 'ElAutocomplete'\ndefineOptions({\n  name: COMPONENT_NAME,\n  inheritAttrs: false,\n})\n\nconst props = defineProps(autocompleteProps)\nconst emit = defineEmits(autocompleteEmits)\n\nconst passInputProps = computed(() => pick(props, Object.keys(inputProps)))\n\nconst rawAttrs = useRawAttrs()\nconst disabled = useFormDisabled()\nconst ns = useNamespace('autocomplete')\n\nconst inputRef = ref<InputInstance>()\nconst regionRef = ref<HTMLElement>()\nconst popperRef = ref<TooltipInstance>()\nconst listboxRef = ref<HTMLElement>()\n\nlet readonly = false\nlet ignoreFocusEvent = false\nconst suggestions = ref<AutocompleteData>([])\nconst highlightedIndex = ref(-1)\nconst dropdownWidth = ref('')\nconst activated = ref(false)\nconst suggestionDisabled = ref(false)\nconst loading = ref(false)\n\nconst listboxId = useId()\nconst styles = computed(() => rawAttrs.style as StyleValue)\n\nconst suggestionVisible = computed(() => {\n  const isValidData = suggestions.value.length > 0\n  return (isValidData || loading.value) && activated.value\n})\n\nconst suggestionLoading = computed(() => !props.hideLoading && loading.value)\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    return Array.from<HTMLInputElement>(\n      inputRef.value.$el.querySelectorAll('input')\n    )\n  }\n  return []\n})\n\nconst onSuggestionShow = () => {\n  if (suggestionVisible.value) {\n    dropdownWidth.value = `${inputRef.value!.$el.offsetWidth}px`\n  }\n}\n\nconst onHide = () => {\n  highlightedIndex.value = -1\n}\n\nconst getData = async (queryString: string) => {\n  if (suggestionDisabled.value) return\n\n  const cb = (suggestionList: AutocompleteData) => {\n    loading.value = false\n    if (suggestionDisabled.value) return\n\n    if (isArray(suggestionList)) {\n      suggestions.value = suggestionList\n      highlightedIndex.value = props.highlightFirstItem ? 0 : -1\n    } else {\n      throwError(COMPONENT_NAME, 'autocomplete suggestions must be an array')\n    }\n  }\n\n  loading.value = true\n  if (isArray(props.fetchSuggestions)) {\n    cb(props.fetchSuggestions)\n  } else {\n    const result = await props.fetchSuggestions(queryString, cb)\n    if (isArray(result)) cb(result)\n  }\n}\nconst debouncedGetData = debounce(getData, props.debounce)\n\nconst handleInput = (value: string) => {\n  const valuePresented = !!value\n\n  emit(INPUT_EVENT, value)\n  emit(UPDATE_MODEL_EVENT, value)\n\n  suggestionDisabled.value = false\n  activated.value ||= valuePresented\n\n  if (!props.triggerOnFocus && !value) {\n    suggestionDisabled.value = true\n    suggestions.value = []\n    return\n  }\n\n  debouncedGetData(value)\n}\n\nconst handleMouseDown = (event: MouseEvent) => {\n  if (disabled.value) return\n  if (\n    (event.target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    activated.value = true\n  }\n}\n\nconst handleChange = (value: string | number) => {\n  emit(CHANGE_EVENT, value)\n}\n\nconst handleFocus = (evt: FocusEvent) => {\n  if (!ignoreFocusEvent) {\n    activated.value = true\n    emit('focus', evt)\n    const queryString = props.modelValue ?? ''\n    if (props.triggerOnFocus && !readonly) {\n      debouncedGetData(String(queryString))\n    }\n  } else {\n    ignoreFocusEvent = false\n  }\n}\n\nconst handleBlur = (evt: FocusEvent) => {\n  setTimeout(() => {\n    // validate current focus event is inside el-tooltip-content\n    // if so, ignore the blur event and the next focus event\n    if (popperRef.value?.isFocusInsideContent()) {\n      ignoreFocusEvent = true\n      return\n    }\n    activated.value && close()\n    emit('blur', evt)\n  })\n}\n\nconst handleClear = () => {\n  activated.value = false\n  emit(UPDATE_MODEL_EVENT, '')\n  emit('clear')\n}\n\nconst handleKeyEnter = async () => {\n  if (inputRef.value?.isComposing) {\n    return\n  }\n\n  if (\n    suggestionVisible.value &&\n    highlightedIndex.value >= 0 &&\n    highlightedIndex.value < suggestions.value.length\n  ) {\n    handleSelect(suggestions.value[highlightedIndex.value])\n  } else {\n    if (props.selectWhenUnmatched) {\n      emit('select', { value: props.modelValue })\n      suggestions.value = []\n      highlightedIndex.value = -1\n    }\n    activated.value = true\n    debouncedGetData(String(props.modelValue))\n  }\n}\n\nconst handleKeyEscape = (evt: Event) => {\n  if (suggestionVisible.value) {\n    evt.preventDefault()\n    evt.stopPropagation()\n    close()\n  }\n}\n\nconst close = () => {\n  activated.value = false\n}\n\nconst focus = () => {\n  inputRef.value?.focus()\n}\n\nconst blur = () => {\n  inputRef.value?.blur()\n}\n\nconst handleSelect = async (item: any) => {\n  emit(INPUT_EVENT, item[props.valueKey])\n  emit(UPDATE_MODEL_EVENT, item[props.valueKey])\n  emit('select', item)\n  suggestions.value = []\n  highlightedIndex.value = -1\n}\n\nconst highlight = (index: number) => {\n  if (!suggestionVisible.value || loading.value) return\n\n  if (index < 0) {\n    if (!props.loopNavigation) {\n      highlightedIndex.value = -1\n      return\n    }\n    index = suggestions.value.length - 1\n  }\n\n  if (index >= suggestions.value.length) {\n    index = props.loopNavigation ? 0 : suggestions.value.length - 1\n  }\n  const suggestion = regionRef.value!.querySelector(\n    `.${ns.be('suggestion', 'wrap')}`\n  )!\n  const suggestionList = suggestion.querySelectorAll<HTMLElement>(\n    `.${ns.be('suggestion', 'list')} li`\n  )!\n  const highlightItem = suggestionList[index]\n  const scrollTop = suggestion.scrollTop\n  const { offsetTop, scrollHeight } = highlightItem\n\n  if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n    suggestion.scrollTop += scrollHeight\n  }\n  if (offsetTop < scrollTop) {\n    suggestion.scrollTop -= scrollHeight\n  }\n  highlightedIndex.value = index\n  inputRef.value?.ref?.setAttribute(\n    'aria-activedescendant',\n    `${listboxId.value}-item-${highlightedIndex.value}`\n  )\n}\n\nconst stopHandle = onClickOutside(listboxRef, () => {\n  // Prevent closing if focus is inside popper content\n  if (popperRef.value?.isFocusInsideContent()) return\n  suggestionVisible.value && close()\n})\n\nonBeforeUnmount(() => {\n  stopHandle?.()\n})\n\nonMounted(() => {\n  const inputElement = inputRef.value?.ref\n  if (!inputElement) return\n  ;[\n    { key: 'role', value: 'textbox' },\n    { key: 'aria-autocomplete', value: 'list' },\n    { key: 'aria-controls', value: 'id' },\n    {\n      key: 'aria-activedescendant',\n      value: `${listboxId.value}-item-${highlightedIndex.value}`,\n    },\n  ].forEach(({ key, value }) => inputElement.setAttribute(key, value))\n  // get readonly attr\n  readonly = inputElement.hasAttribute('readonly')\n})\n\ndefineExpose({\n  /** @description the index of the currently highlighted item */\n  highlightedIndex,\n  /** @description autocomplete whether activated */\n  activated,\n  /** @description remote search loading status */\n  loading,\n  /** @description el-input component instance */\n  inputRef,\n  /** @description el-tooltip component instance */\n  popperRef,\n  /** @description fetch suggestions result */\n  suggestions,\n  /** @description triggers when a suggestion is clicked */\n  handleSelect,\n  /** @description handle keyboard enter event */\n  handleKeyEnter,\n  /** @description focus the input element */\n  focus,\n  /** @description blur the input element */\n  blur,\n  /** @description close suggestion */\n  close,\n  /** @description highlight an item in a suggestion */\n  highlight,\n  /** @description loading suggestion list */\n  getData,\n})\n</script>\n"],"names":["computed","pick","inputProps","useRawAttrs","useFormDisabled","useNamespace","ref","useId","isArray","throwError","debounce","INPUT_EVENT","UPDATE_MODEL_EVENT","CHANGE_EVENT","onClickOutside","onBeforeUnmount","onMounted","_openBlock","_createBlock","_unref","ElTooltip"],"mappings":"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"}