{"version":3,"file":"input2.mjs","sources":["../../../../../../packages/components/input/src/input.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      containerKls,\n      {\n        [nsInput.bm('group', 'append')]: $slots.append,\n        [nsInput.bm('group', 'prepend')]: $slots.prepend,\n      },\n    ]\"\n    :style=\"containerStyle\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <!-- input -->\n    <template v-if=\"type !== 'textarea'\">\n      <!-- prepend slot -->\n      <div v-if=\"$slots.prepend\" :class=\"nsInput.be('group', 'prepend')\">\n        <slot name=\"prepend\" />\n      </div>\n\n      <div ref=\"wrapperRef\" :class=\"wrapperKls\">\n        <!-- prefix slot -->\n        <span v-if=\"$slots.prefix || prefixIcon\" :class=\"nsInput.e('prefix')\">\n          <span :class=\"nsInput.e('prefix-inner')\">\n            <slot name=\"prefix\" />\n            <el-icon v-if=\"prefixIcon\" :class=\"nsInput.e('icon')\">\n              <component :is=\"prefixIcon\" />\n            </el-icon>\n          </span>\n        </span>\n\n        <input\n          :id=\"inputId\"\n          ref=\"input\"\n          :class=\"nsInput.e('inner')\"\n          v-bind=\"attrs\"\n          :name=\"name\"\n          :minlength=\"minlength\"\n          :maxlength=\"maxlength\"\n          :type=\"showPassword ? (passwordVisible ? 'text' : 'password') : type\"\n          :disabled=\"inputDisabled\"\n          :readonly=\"readonly\"\n          :autocomplete=\"autocomplete\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"ariaLabel\"\n          :placeholder=\"placeholder\"\n          :style=\"inputStyle\"\n          :form=\"form\"\n          :autofocus=\"autofocus\"\n          :role=\"containerRole\"\n          :inputmode=\"inputmode\"\n          @compositionstart=\"handleCompositionStart\"\n          @compositionupdate=\"handleCompositionUpdate\"\n          @compositionend=\"handleCompositionEnd\"\n          @input=\"handleInput\"\n          @change=\"handleChange\"\n          @keydown=\"handleKeydown\"\n        />\n\n        <!-- suffix slot -->\n        <span v-if=\"suffixVisible\" :class=\"nsInput.e('suffix')\">\n          <span :class=\"nsInput.e('suffix-inner')\">\n            <template\n              v-if=\"!showClear || !showPwdVisible || !isWordLimitVisible\"\n            >\n              <slot name=\"suffix\" />\n              <el-icon v-if=\"suffixIcon\" :class=\"nsInput.e('icon')\">\n                <component :is=\"suffixIcon\" />\n              </el-icon>\n            </template>\n            <el-icon\n              v-if=\"showClear\"\n              :class=\"[nsInput.e('icon'), nsInput.e('clear')]\"\n              @mousedown.prevent=\"NOOP\"\n              @click=\"clear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showPwdVisible\"\n              :class=\"[nsInput.e('icon'), nsInput.e('password')]\"\n              @click=\"handlePasswordVisible\"\n            >\n              <component :is=\"passwordIcon\" />\n            </el-icon>\n            <span\n              v-if=\"isWordLimitVisible\"\n              :class=\"[\n                nsInput.e('count'),\n                nsInput.is('outside', wordLimitPosition === 'outside'),\n              ]\"\n            >\n              <span :class=\"nsInput.e('count-inner')\">\n                {{ textLength }} / {{ maxlength }}\n              </span>\n            </span>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </span>\n      </div>\n\n      <!-- append slot -->\n      <div v-if=\"$slots.append\" :class=\"nsInput.be('group', 'append')\">\n        <slot name=\"append\" />\n      </div>\n    </template>\n\n    <!-- textarea -->\n    <template v-else>\n      <textarea\n        :id=\"inputId\"\n        ref=\"textarea\"\n        :class=\"[nsTextarea.e('inner'), nsInput.is('focus', isFocused)]\"\n        v-bind=\"attrs\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :tabindex=\"tabindex\"\n        :disabled=\"inputDisabled\"\n        :readonly=\"readonly\"\n        :autocomplete=\"autocomplete\"\n        :style=\"textareaStyle\"\n        :aria-label=\"ariaLabel\"\n        :placeholder=\"placeholder\"\n        :form=\"form\"\n        :autofocus=\"autofocus\"\n        :rows=\"rows\"\n        :role=\"containerRole\"\n        @compositionstart=\"handleCompositionStart\"\n        @compositionupdate=\"handleCompositionUpdate\"\n        @compositionend=\"handleCompositionEnd\"\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @change=\"handleChange\"\n        @keydown=\"handleKeydown\"\n      />\n      <span\n        v-if=\"isWordLimitVisible\"\n        :style=\"countStyle\"\n        :class=\"[\n          nsInput.e('count'),\n          nsInput.is('outside', wordLimitPosition === 'outside'),\n        ]\"\n      >\n        {{ textLength }} / {{ maxlength }}\n      </span>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  shallowRef,\n  toRef,\n  useAttrs as useRawAttrs,\n  useSlots,\n  watch,\n} from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { isNil } from 'lodash-unified'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { Hide as IconHide, View as IconView } from '@element-plus/icons-vue'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport {\n  NOOP,\n  ValidateComponentsMap,\n  debugWarn,\n  isClient,\n  isObject,\n} from '@element-plus/utils'\nimport {\n  useAttrs,\n  useComposition,\n  useCursor,\n  useFocusController,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { calcTextareaHeight, looseToNumber } from './utils'\nimport { inputEmits, inputProps } from './input'\n\nimport type { StyleValue } from 'vue'\n\ntype TargetElement = HTMLInputElement | HTMLTextAreaElement\n\nconst COMPONENT_NAME = 'ElInput'\ndefineOptions({\n  name: COMPONENT_NAME,\n  inheritAttrs: false,\n})\nconst props = defineProps(inputProps)\nconst emit = defineEmits(inputEmits)\n\nconst rawAttrs = useRawAttrs()\nconst attrs = useAttrs()\nconst slots = useSlots()\n\nconst containerKls = computed(() => [\n  props.type === 'textarea' ? nsTextarea.b() : nsInput.b(),\n  nsInput.m(inputSize.value),\n  nsInput.is('disabled', inputDisabled.value),\n  nsInput.is('exceed', inputExceed.value),\n  {\n    [nsInput.b('group')]: slots.prepend || slots.append,\n    [nsInput.m('prefix')]: slots.prefix || props.prefixIcon,\n    [nsInput.m('suffix')]:\n      slots.suffix || props.suffixIcon || props.clearable || props.showPassword,\n    [nsInput.bm('suffix', 'password-clear')]:\n      showClear.value && showPwdVisible.value,\n    [nsInput.b('hidden')]: props.type === 'hidden',\n  },\n  rawAttrs.class,\n])\n\nconst wrapperKls = computed(() => [\n  nsInput.e('wrapper'),\n  nsInput.is('focus', isFocused.value),\n])\n\nconst { form: elForm, formItem: elFormItem } = useFormItem()\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: elFormItem,\n})\nconst inputSize = useFormSize()\nconst inputDisabled = useFormDisabled()\nconst nsInput = useNamespace('input')\nconst nsTextarea = useNamespace('textarea')\n\nconst input = shallowRef<HTMLInputElement>()\nconst textarea = shallowRef<HTMLTextAreaElement>()\n\nconst hovering = ref(false)\nconst passwordVisible = ref(false)\nconst countStyle = ref<StyleValue>()\nconst textareaCalcStyle = shallowRef(props.inputStyle)\n\nconst _ref = computed(() => input.value || textarea.value)\n\n// wrapperRef for type=\"text\", handleFocus and handleBlur for type=\"textarea\"\nconst { wrapperRef, isFocused, handleFocus, handleBlur } = useFocusController(\n  _ref,\n  {\n    disabled: inputDisabled,\n    afterBlur() {\n      if (props.validateEvent) {\n        elFormItem?.validate?.('blur').catch((err) => debugWarn(err))\n      }\n    },\n  }\n)\n\nconst needStatusIcon = computed(() => elForm?.statusIcon ?? false)\nconst validateState = computed(() => elFormItem?.validateState || '')\nconst validateIcon = computed(\n  () => validateState.value && ValidateComponentsMap[validateState.value]\n)\nconst passwordIcon = computed(() =>\n  passwordVisible.value ? IconView : IconHide\n)\nconst containerStyle = computed<StyleValue>(() => [\n  rawAttrs.style as StyleValue,\n])\nconst textareaStyle = computed<StyleValue>(() => [\n  props.inputStyle,\n  textareaCalcStyle.value,\n  { resize: props.resize },\n])\nconst nativeInputValue = computed(() =>\n  isNil(props.modelValue) ? '' : String(props.modelValue)\n)\nconst showClear = computed(\n  () =>\n    props.clearable &&\n    !inputDisabled.value &&\n    !props.readonly &&\n    !!nativeInputValue.value &&\n    (isFocused.value || hovering.value)\n)\nconst showPwdVisible = computed(\n  () => props.showPassword && !inputDisabled.value && !!nativeInputValue.value\n)\nconst isWordLimitVisible = computed(\n  () =>\n    props.showWordLimit &&\n    !!props.maxlength &&\n    (props.type === 'text' || props.type === 'textarea') &&\n    !inputDisabled.value &&\n    !props.readonly &&\n    !props.showPassword\n)\nconst textLength = computed(() => nativeInputValue.value.length)\nconst inputExceed = computed(\n  () =>\n    // show exceed style if length of initial value greater then maxlength\n    !!isWordLimitVisible.value && textLength.value > Number(props.maxlength)\n)\nconst suffixVisible = computed(\n  () =>\n    !!slots.suffix ||\n    !!props.suffixIcon ||\n    showClear.value ||\n    props.showPassword ||\n    isWordLimitVisible.value ||\n    (!!validateState.value && needStatusIcon.value)\n)\nconst hasModelModifiers = computed(\n  () => !!Object.keys(props.modelModifiers).length\n)\n\nconst [recordCursor, setCursor] = useCursor(input)\n\nuseResizeObserver(textarea, (entries) => {\n  onceInitSizeTextarea()\n  if (!isWordLimitVisible.value || props.resize !== 'both') return\n  const entry = entries[0]\n  const { width } = entry.contentRect\n  countStyle.value = {\n    /** right: 100% - width + padding(15) + right(6) */\n    right: `calc(100% - ${width + 15 + 6}px)`,\n  }\n})\n\nconst resizeTextarea = () => {\n  const { type, autosize } = props\n\n  if (!isClient || type !== 'textarea' || !textarea.value) return\n\n  if (autosize) {\n    const minRows = isObject(autosize) ? autosize.minRows : undefined\n    const maxRows = isObject(autosize) ? autosize.maxRows : undefined\n    const textareaStyle = calcTextareaHeight(textarea.value, minRows, maxRows)\n\n    // If the scrollbar is displayed, the height of the textarea needs more space than the calculated height.\n    // If set textarea height in this case, the scrollbar will not hide.\n    // So we need to hide scrollbar first, and reset it in next tick.\n    // see https://github.com/element-plus/element-plus/issues/8825\n    textareaCalcStyle.value = {\n      overflowY: 'hidden',\n      ...textareaStyle,\n    }\n\n    nextTick(() => {\n      // NOTE: Force repaint to make sure the style set above is applied.\n      textarea.value!.offsetHeight\n      textareaCalcStyle.value = textareaStyle\n    })\n  } else {\n    textareaCalcStyle.value = {\n      minHeight: calcTextareaHeight(textarea.value).minHeight,\n    }\n  }\n}\n\nconst createOnceInitResize = (resizeTextarea: () => void) => {\n  let isInit = false\n  return () => {\n    if (isInit || !props.autosize) return\n    const isElHidden = textarea.value?.offsetParent === null\n    if (!isElHidden) {\n      setTimeout(resizeTextarea)\n      isInit = true\n    }\n  }\n}\n// fix: https://github.com/element-plus/element-plus/issues/12074\nconst onceInitSizeTextarea = createOnceInitResize(resizeTextarea)\n\nconst setNativeInputValue = () => {\n  const input = _ref.value\n  const formatterValue = props.formatter\n    ? props.formatter(nativeInputValue.value)\n    : nativeInputValue.value\n  if (!input || input.value === formatterValue) return\n  input.value = formatterValue\n}\n\nconst formatValue = (value: string) => {\n  const { trim, number } = props.modelModifiers\n  if (trim) {\n    value = value.trim()\n  }\n  if (number) {\n    value = `${looseToNumber(value)}`\n  }\n  if (props.formatter && props.parser) {\n    value = props.parser(value)\n  }\n  return value\n}\n\nconst handleInput = async (event: Event) => {\n  // should not emit input during composition\n  // see: https://github.com/ElemeFE/element/issues/10516\n  if (isComposing.value) return\n\n  const { lazy } = props.modelModifiers\n  let { value } = event.target as TargetElement\n  if (lazy) {\n    emit(INPUT_EVENT, value)\n    return\n  }\n\n  value = formatValue(value)\n\n  // hack for https://github.com/ElemeFE/element/issues/8548\n  // should remove the following line when we don't support IE\n  if (String(value) === nativeInputValue.value) {\n    // preserve native features while being compatible with #9501\n    if (props.formatter) {\n      setNativeInputValue()\n    }\n    return\n  }\n\n  recordCursor()\n  emit(UPDATE_MODEL_EVENT, value)\n  emit(INPUT_EVENT, value)\n\n  // ensure native input value is controlled\n  // see: https://github.com/ElemeFE/element/issues/12850\n  await nextTick()\n\n  if ((props.formatter && props.parser) || !hasModelModifiers.value) {\n    setNativeInputValue()\n  }\n  setCursor()\n}\n\nconst handleChange = async (event: Event) => {\n  let { value } = event.target as TargetElement\n\n  value = formatValue(value)\n  if (props.modelModifiers.lazy) {\n    emit(UPDATE_MODEL_EVENT, value)\n  }\n  emit(CHANGE_EVENT, value)\n\n  await nextTick()\n  setNativeInputValue()\n}\n\nconst {\n  isComposing,\n  handleCompositionStart,\n  handleCompositionUpdate,\n  handleCompositionEnd,\n} = useComposition({ emit, afterComposition: handleInput })\n\nconst handlePasswordVisible = () => {\n  recordCursor()\n  passwordVisible.value = !passwordVisible.value\n  // The native input needs a little time to regain focus\n  setTimeout(setCursor)\n}\n\nconst focus = () => _ref.value?.focus()\n\nconst blur = () => _ref.value?.blur()\n\nconst handleMouseLeave = (evt: MouseEvent) => {\n  hovering.value = false\n  emit('mouseleave', evt)\n}\n\nconst handleMouseEnter = (evt: MouseEvent) => {\n  hovering.value = true\n  emit('mouseenter', evt)\n}\n\nconst handleKeydown = (evt: KeyboardEvent) => {\n  emit('keydown', evt)\n}\n\nconst select = () => {\n  _ref.value?.select()\n}\n\nconst clear = () => {\n  emit(UPDATE_MODEL_EVENT, '')\n  emit(CHANGE_EVENT, '')\n  emit('clear')\n  emit(INPUT_EVENT, '')\n}\n\nwatch(\n  () => props.modelValue,\n  () => {\n    nextTick(() => resizeTextarea())\n    if (props.validateEvent) {\n      elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n\n// native input value is set explicitly\n// do not use v-model / :value in template\n// see: https://github.com/ElemeFE/element/issues/14521\nwatch(nativeInputValue, (newValue) => {\n  if (!_ref.value) {\n    return\n  }\n  const { trim, number } = props.modelModifiers\n  const elValue = _ref.value.value\n  const displayValue =\n    (number || props.type === 'number') && !/^0\\d/.test(elValue)\n      ? `${looseToNumber(elValue)}`\n      : elValue\n\n  if (displayValue === newValue) {\n    return\n  }\n\n  if (document.activeElement === _ref.value && _ref.value.type !== 'range') {\n    if (trim && displayValue.trim() === newValue) {\n      return\n    }\n  }\n\n  setNativeInputValue()\n})\n\n// when change between <input> and <textarea>,\n// update DOM dependent value and styles\n// https://github.com/ElemeFE/element/issues/14857\nwatch(\n  () => props.type,\n  async () => {\n    await nextTick()\n    setNativeInputValue()\n    resizeTextarea()\n  }\n)\n\nonMounted(() => {\n  if (!props.formatter && props.parser) {\n    debugWarn(\n      COMPONENT_NAME,\n      'If you set the parser, you also need to set the formatter.'\n    )\n  }\n  setNativeInputValue()\n  nextTick(resizeTextarea)\n})\n\ndefineExpose({\n  /** @description HTML input element */\n  input,\n  /** @description HTML textarea element */\n  textarea,\n  /** @description HTML element, input or textarea */\n  ref: _ref,\n  /** @description style of textarea. */\n  textareaStyle,\n\n  /** @description from props (used on unit test) */\n  autosize: toRef(props, 'autosize'),\n\n  /** @description is input composing */\n  isComposing,\n\n  /** @description HTML input element native method */\n  focus,\n  /** @description HTML input element native method */\n  blur,\n  /** @description HTML input element native method */\n  select,\n  /** @description clear input value */\n  clear,\n  /** @description resize textarea. */\n  resizeTextarea,\n})\n</script>\n"],"names":["useRawAttrs","useAttrs","IconView","IconHide","textareaStyle","input","_openBlock","_createElementBlock","_normalizeClass","_unref","_normalizeStyle","_createCommentVNode","_Fragment","_renderSlot","_createElementVNode"],"mappings":"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"}